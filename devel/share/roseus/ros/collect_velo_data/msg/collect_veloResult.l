;; Auto-generated. Do not edit!


(when (boundp 'collect_velo_data::collect_veloResult)
  (if (not (find-package "COLLECT_VELO_DATA"))
    (make-package "COLLECT_VELO_DATA"))
  (shadow 'collect_veloResult (find-package "COLLECT_VELO_DATA")))
(unless (find-package "COLLECT_VELO_DATA::COLLECT_VELORESULT")
  (make-package "COLLECT_VELO_DATA::COLLECT_VELORESULT"))

(in-package "ROS")
;;//! \htmlinclude collect_veloResult.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass collect_velo_data::collect_veloResult
  :super ros::object
  :slots (_result_rotation _ts_ptu _ts_rs ))

(defmethod collect_velo_data::collect_veloResult
  (:init
   (&key
    ((:result_rotation __result_rotation) (instance geometry_msgs::TransformStamped :init))
    ((:ts_ptu __ts_ptu) (instance geometry_msgs::TransformStamped :init))
    ((:ts_rs __ts_rs) (instance geometry_msgs::TransformStamped :init))
    )
   (send-super :init)
   (setq _result_rotation __result_rotation)
   (setq _ts_ptu __ts_ptu)
   (setq _ts_rs __ts_rs)
   self)
  (:result_rotation
   (&rest __result_rotation)
   (if (keywordp (car __result_rotation))
       (send* _result_rotation __result_rotation)
     (progn
       (if __result_rotation (setq _result_rotation (car __result_rotation)))
       _result_rotation)))
  (:ts_ptu
   (&rest __ts_ptu)
   (if (keywordp (car __ts_ptu))
       (send* _ts_ptu __ts_ptu)
     (progn
       (if __ts_ptu (setq _ts_ptu (car __ts_ptu)))
       _ts_ptu)))
  (:ts_rs
   (&rest __ts_rs)
   (if (keywordp (car __ts_rs))
       (send* _ts_rs __ts_rs)
     (progn
       (if __ts_rs (setq _ts_rs (car __ts_rs)))
       _ts_rs)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/TransformStamped _result_rotation
    (send _result_rotation :serialization-length)
    ;; geometry_msgs/TransformStamped _ts_ptu
    (send _ts_ptu :serialization-length)
    ;; geometry_msgs/TransformStamped _ts_rs
    (send _ts_rs :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/TransformStamped _result_rotation
       (send _result_rotation :serialize s)
     ;; geometry_msgs/TransformStamped _ts_ptu
       (send _ts_ptu :serialize s)
     ;; geometry_msgs/TransformStamped _ts_rs
       (send _ts_rs :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/TransformStamped _result_rotation
     (send _result_rotation :deserialize buf ptr-) (incf ptr- (send _result_rotation :serialization-length))
   ;; geometry_msgs/TransformStamped _ts_ptu
     (send _ts_ptu :deserialize buf ptr-) (incf ptr- (send _ts_ptu :serialization-length))
   ;; geometry_msgs/TransformStamped _ts_rs
     (send _ts_rs :deserialize buf ptr-) (incf ptr- (send _ts_rs :serialization-length))
   ;;
   self)
  )

(setf (get collect_velo_data::collect_veloResult :md5sum-) "593509ac84d519f457e1f20b78510e22")
(setf (get collect_velo_data::collect_veloResult :datatype-) "collect_velo_data/collect_veloResult")
(setf (get collect_velo_data::collect_veloResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result definition
geometry_msgs/TransformStamped result_rotation
geometry_msgs/TransformStamped ts_ptu
geometry_msgs/TransformStamped ts_rs

================================================================================
MSG: geometry_msgs/TransformStamped
# This expresses a transform from coordinate frame header.frame_id
# to the coordinate frame child_frame_id
#
# This message is mostly used by the 
# <a href=\"http://wiki.ros.org/tf\">tf</a> package. 
# See its documentation for more information.

Header header
string child_frame_id # the frame id of the child frame
Transform transform

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Transform
# This represents the transform between two coordinate frames in free space.

Vector3 translation
Quaternion rotation

================================================================================
MSG: geometry_msgs/Vector3
# This represents a vector in free space. 
# It is only meant to represent a direction. Therefore, it does not
# make sense to apply a translation to it (e.g., when applying a 
# generic rigid transformation to a Vector3, tf2 will only apply the
# rotation). If you want your data to be translatable too, use the
# geometry_msgs/Point message instead.

float64 x
float64 y
float64 z
================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :collect_velo_data/collect_veloResult "593509ac84d519f457e1f20b78510e22")


